#!/bin/bash

# Script de Instalacao do Arch Linux
# Contato Telegram: @rocker_raccoon
# Atualizado: 02/03/2020

clear ; echo -e '\t\t\t\tScript de Instalacao do Arch Linux \n\nAtive a particao swap e monte as unidades destino antes de continuar... \n'

echo -n 'Continuar? [ S ou s = SIM ] ' ; read yorn
    if [[ $yorn = [sSyY] ]]; then
    
trap '' INT TSTP

	if [ -d /mnt/var/cache/pacman/pkg ]; then
	echo ; echo -n 'Deseja reutilizar o cache da instalacao anterior ? [ S ou s = SIM ] ' ; read pcial
	if [[ $pcial = [sSyY] ]]; then
	echo -e '\nAguarde... \n' ; mv /mnt/var/cache/pacman/pkg /mnt/.p ; rm -rf /mnt/* ; mkdir -p /mnt/var/cache/pacman ; mv /mnt/.p /mnt/var/cache/pacman/pkg
	fi
	fi
    

echo -e "\nRegiao\n------\n\n1) Rio_Branco\t\t\t2) Manaus\t\t\t3) Sao_Paulo\t\t4)Noronha" ; echo -n "Escolha [1-4]: " ; read g
case $g in
    1) fshz='Rio_Branco' ;; 2) fshz='Rio_Branco' ;; 3) fshz='Sao_Paulo' ;; 4) fshz='Noronha' ;;
esac

echo -n 'Digite o nome do usuario: ' ; read nnu ; echo
echo -n 'Digite um nome para a maquina (hostname): ' ; read nmq
clear ; echo -e '\nDesktop Environment\n-------------------\n\n1) XFCE\t\t\t2) Mate\t\t\t3) Plasma\n4) Cinnamon\t\t5) Gnome\t\t6) Nenhum\n' ; echo -n 'Escolha [1-6]: ' ; read g
case $g in
    1) setde='xfce4 pulseaudio pavucontrol ristretto thunar-archive-plugin xfce4-clipman-plugin xfce4-notifyd xfce4-pulseaudio-plugin xfce4-screensaver xfce4-screenshooter xfce4-whiskermenu-plugin file-roller gnome-calculator network-manager-applet' ; mkdir -p /mnt/etc/skel/ ; echo -e 'export XDG_SESSION_TYPE=x11 \nexec startxfce4' >> /mnt/etc/skel/.xinitrc ; echo 'startx' >> /mnt/etc/skel/.zprofile ; touch /mnt/.gtk ;;
    2) setde='mate pulseaudio engrampa eom mate-applets mate-calc mate-media mate-power-manager mate-screensaver mate-system-monitor mate-terminal mate-utils network-manager-applet' ; mkdir -p /mnt/etc/skel/ ; echo -e 'export XDG_SESSION_TYPE=x11 \nexec mate-session' >> /mnt/etc/skel/.xinitrc ; echo 'startx' >> /mnt/etc/skel/.zprofile ; touch /mnt/.gtk ;;
    3) setde='plasma-desktop kwin plasma-nm kdeplasma-addons plasma-pa breeze breeze-gtk kscreen systemsettings kde-gtk-config kio-extras powerdevil pulseaudio konsole dolphin ark spectacle' ; mkdir -p /mnt/etc/skel/ ; echo -e 'export XDG_SESSION_TYPE=x11 \nexec startplasma-x11' >> /mnt/etc/skel/.xinitrc ; echo 'startx' >> /mnt/etc/skel/.zprofile ;;
    4) setde='cinnamon pulseaudio gnome-terminal file-roller eog gnome-calculator gnome-screenshot gnome-backgrounds gnome-disk-utility network-manager-applet' ; mkdir -p /mnt/etc/skel/ ; echo -e 'export XDG_SESSION_TYPE=x11 \nexec cinnamon-session' >> /mnt/etc/skel/.xinitrc ; echo 'startx' >> /mnt/etc/skel/.zprofile ; touch /mnt/.gtk ;;
    5) setde='gnome-terminal gnome-backgrounds gnome-control-center gnome-menus gnome-screensaver gnome-session gnome-settings-daemon gnome-shell gnome-disk-utility gnome-shell-extensions gnome-tweaks gnome-calculator mutter eog nautilus network-manager-applet file-roller gnome-screenshot' ; mkdir -p /mnt/etc/skel/ ; echo -e 'export XDG_SESSION_TYPE=x11 \nexport GDK_BACKEND=x11 \nexec gnome-session' >> /mnt/etc/skel/.xinitrc ; echo 'startx' >> /mnt/etc/skel/.zprofile ; touch /mnt/.gtk ;;
    6) setde=' ' ;;
esac

echo -e "\nProcessador\n-----------\n\n1) AMD\t\t\t2) Intel\t\t\t3) Nao definir\n" ; echo -n "Escolha [1-3]: " ; read g
case $g in
    1) drpc="amd-ucode" ;; 2) drpc="intel-ucode" ;; 3) drprc=" " ;;
esac
clear

pacstrap /mnt base base-devel linux linux-firmware linux-headers dhcpcd nano grub xorg-server xorg-xinit xorg-xrandr wget git p7zip unrar gvfs ttf-dejavu zsh networkmanager xdg-user-dirs alsa-utils $setde $drpc

mkdir -p /mnt/etc/skel/{"Desktop","Documentos","Downloads","Imagens","Modelos","Música","Público","Vídeos",".bin",".icons",".themes",".fonts"}

echo $nmq > /mnt/etc/hostname

sed -i '/pt_BR.UTF-8/,+1 s/^#//' /mnt/etc/locale.gen

echo 'LANG=pt_BR.UTF-8' > /mnt/etc/locale.conf

arch-chroot /mnt locale-gen

arch-chroot /mnt ln -sf /usr/share/zoneinfo/America/$fshz /etc/localtime

genfstab -U /mnt >> /mnt/etc/fstab

clear ; echo -e '\nGRUB\n----\n\n1) BIOS\t\t\t2) UEFI\t\t\t3) Nao definir\n' ; echo -n 'Escolha [1-3]: ' ; read g
case $g in
    1) sleep 2 ; echo ; echo -n 'Indique o disco onde o GRUB sera instalado. Ex.: sda, sdb, sdc: ' ; read dgrb ; arch-chroot /mnt grub-install /dev/$dgrb ; mkdir -p /mnt/boot/grub/themes ; wget https://github.com/binolinux/backgrounds/raw/master/arch-pacman-invaders-1920x1080.png -O /mnt/boot/grub/themes/background.png ; sed -i 's/\/path\/to\/wallpaper/\/boot\/grub\/themes\/background.png/' /mnt/etc/default/grub ; sed -i '/GRUB_BACKGROUND/s/^#//' /mnt/etc/default/grub ; echo -e '\nmenuentry "Reiniciar" {\n	echo "Reiniciando o sistema..."\n	reboot\n}\n\nmenuentry "Desligar" {\n	echo "Desligando o sistema..."\n	halt\n}\n' | tee -a /mnt/etc/grub.d/40_custom ; arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg ;;
    2) arch-chroot /mnt pacman -S --needed --noconfirm efibootmgr ; arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub --recheck ; mkdir -p /mnt/boot/grub/themes ; wget https://github.com/binolinux/backgrounds/raw/master/arch-pacman-invaders-1920x1080.png /mnt/boot/grub/themes/background.png ; sed -i 's/\/path\/to\/wallpaper/\/boot\/grub\/themes\/background.png/' /mnt/etc/default/grub ; sed -i '/GRUB_BACKGROUND/s/^#//' /mnt/etc/default/grub ; echo -e '\nmenuentry "Reiniciar" {\n	echo "Reiniciando o sistema..."\n	reboot\n}\n\nmenuentry "Desligar" {\n	echo "Desligando o sistema..."\n	halt\n}\n' | tee -a /mnt/etc/grub.d/40_custom ; arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg ;;
    3) break ;;
esac

cat << EOF > /mnt/etc/vconsole.conf
KEYMAP=br-abnt2
FONT=Lat2-Terminus16
FONT_MAP=
EOF

mkdir -p /mnt/etc/X11/xorg.conf.d/
cat << EOF > /mnt/etc/X11/xorg.conf.d/01-keyboard-layout.conf
Section "InputClass"
         Identifier "Keyboard Defaults"
         MatchIsKeyboard "yes"
         Option "XkbLayout" "br"
EndSection
EOF

arch-chroot /mnt git clone https://github.com/ohmyzsh/ohmyzsh /etc/skel/.oh-my-zsh
arch-chroot /mnt git clone https://github.com/zsh-users/zsh-autosuggestions.git /etc/skel/.oh-my-zsh/plugins/zsh-autosuggestions
arch-chroot /mnt git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /etc/skel/.oh-my-zsh/plugins/zsh-syntax-highlighting
cp /mnt/etc/skel/.oh-my-zsh/templates/zshrc.zsh-template /mnt/etc/skel/.zshrc
sed -i 's/en_US/pt_BR/' /mnt/etc/skel/.zshrc ; sed -i '/pt_BR/s/^#//' /mnt/etc/skel/.zshrc ; sed -i '/export PATH=/s/^#//' /mnt/etc/skel/.zshrc
sed -i 's/(git)/(git compleat common-aliases extract zsh-autosuggestions zsh-syntax-highlighting)/' /mnt/etc/skel/.zshrc
wget https://github.com/dylanaraps/neofetch/raw/master/neofetch -O /mnt/usr/local/bin/neofetch
#wget https://github.com/KittyKatt/screenFetch/raw/master/screenfetch-dev -O /mnt/usr/local/bin/screenfetch
wget https://github.com/sivel/speedtest-cli/raw/master/speedtest.py -O /mnt/usr/local/bin/speedtest-cli
chmod +x /mnt/usr/local/bin/*

arch-chroot /mnt groupadd -r autologin
arch-chroot /mnt useradd -m -g users -G autologin,wheel,storage,power -s /bin/bash $nnu

clear ; echo 'senha do root '
arch-chroot /mnt passwd

echo ; echo 'senha do '$nnu' '
arch-chroot /mnt passwd $nnu
arch-chroot /mnt chsh -s /bin/zsh $nnu

sed -i '/%wheel ALL=(ALL) ALL/s/^#//' /mnt/etc/sudoers

arch-chroot /mnt systemctl enable {dhcpcd,NetworkManager} ; clear

if [ -f /mnt/.gtk ]; then
cat << EOF > /mnt/temas
#!/bin/bash
git clone https://github.com/vinceliuice/Matcha-gtk-theme /tmp/matcha ; cd /tmp/matcha ; sh install.sh -d /usr/share/themes/
git clone https://github.com/daniruiz/flat-remix-gtk /tmp/flatremix ; mv /tmp/flatremix/Flat* /usr/share/themes/
wget -qO- https://raw.githubusercontent.com/PapirusDevelopmentTeam/papirus-icon-theme/master/install.sh | sh
wget -qO- https://raw.githubusercontent.com/PapirusDevelopmentTeam/papirus-folders/master/install.sh | sh
papirus-folders --color teal
pacman -S --needed --noconfirm arc-icon-theme moka-icon-theme
EOF
arch-chroot /mnt sh temas
rm -f /mnt/.gtk
fi

arch-chroot /mnt chown -R $nnu:$nnu /home/$nnu ; arch-chroot /mnt chown -R ${nnu}:${nnu} /home/$nnu

arch-chroot /mnt pacman -Sc --noconfirm

clear ; echo -e 'Instalacao concluida. Reiniciar? [ S ou s = SIM ]' ; read yorn
    if [[ $yorn = [sSyY] ]]; then
    umount -R /mnt && reboot
    fi
    
    else
    exit
    fi
